Package: sentiment.ai
Type: Package
Title: Simplified sentiment analysis with AI
Version: 0.1.0
Authors@R:
  c(person('Ben', 'Wiseman',
           role    = c('ccp', 'cre', 'aut'),
           email   = 'benjamin.h.wiseman@gmail.com'),
    person('Steven', 'Nydick',
           role    = c('aut'),
           email   = 'swnydick@gmail.com',
           comment = c(ORCID = "0000-0002-2908-1188")),
    person('Tristan', 'Wisner',
           role    = c('aut'),
           email   = 'tristan.wisner@kornferry.com'),
    person('Fiona', 'Lodge',
           role    = c('ctb'),
           email   = 'fiona.lodge@kornferry.com'),
    person('Yu-Ann', 'Wang',
           role    = c('ctb'),
           email   = 'yu-ann-wang@kornferry.com'),
    person('Korn Ferry Institute', 
           role = c('fnd'),
           email = 'KFInstituteRequests@KornFerry.com')
           )
Maintainer: Ben Wiseman <benjamin.h.wiseman@gmail.com>
Description: Easy way to do sentiment analysis with transfer learning from Google's Universal Sentence
  Encoder. Better performance than traditional dictionary based sentiment analysis! 
License: MIT + file LICENSE
Encoding: UTF-8
LazyData: true
Roxygen: list(markdown = TRUE)
RoxygenNote: 7.1.2
VignetteBuilder: knitr
Depends:
    R (>= 4.0.0)
Imports:
    data.table (>= 1.12.8),
    reticulate (>= 1.16),
    roperators (>= 1.2.0),
    stats,
    tensorflow (>= 2.2.0),
    tfhub (>= 0.8.0),
    utils,
    xgboost
Suggests:
    knitr,
    magrittr,
    microbenchmark,
    prettydoc,
    rstudioapi,
    text2vec (>= 0.6)
Collate: 
    'package-sentiment_ai.R'
    'init_and_install.R'
    'sentiment.R'
    'choose_model.R'
    'data-default_data.R'
    'data-example_data.R'
    'object-sentiment_ai_embed.R'
    'matrix_helpers.R'
    'constants.R'
    'create_error_text.R'
    'utils-data-table.R'
    'globals.R'
